<Behaviors>
    <Template Name="ASOBO_HANDLING_Wipers_Controller_SubTemplate">
		<Parameters Type="Default">
			<NODE_ID>HANDLING_#INTERACTION_TYPE#_Wipers</NODE_ID>
			<ANIM_NAME>HANDLING_#INTERACTION_TYPE#_Wipers</ANIM_NAME>
			<WWISE_EVENT>wipers_switch</WWISE_EVENT> 
			<TEMPLATE_TO_USE>ASOBO_GT_Switch_XStates</TEMPLATE_TO_USE>
			<CIRCUIT_ID_WIPERS>1</CIRCUIT_ID_WIPERS>
			<Switch>
				<case Valid="OFF_INT_LOW_HIGH">
					<POWER_INT>30</POWER_INT>
					<POWER_LOW>75</POWER_LOW>
					<POWER_HIGH>100</POWER_HIGH>
					<POS_OFF>0</POS_OFF>
					<POS_INT>1</POS_INT>
					<POS_LOW>2</POS_LOW>
					<POS_HIGH>3</POS_HIGH>
					<NUM_STATES>4</NUM_STATES>
				</case>
				<case Valid="PARK_OFF_NORM_FAST">
					<POWER_FAST>100</POWER_FAST>
					<POWER_NORM>50</POWER_NORM>
					<POS_PARK>0</POS_PARK>
					<POS_OFF>1</POS_OFF>
					<POS_NORM>2</POS_NORM>
					<POS_FAST>3</POS_FAST>
					<MOMENTARY_MIN_DURATION>0.1</MOMENTARY_MIN_DURATION>
					<CIRCUIT_ID_PARK>1</CIRCUIT_ID_PARK>
					<NUM_STATES>4</NUM_STATES>
				</case>
				<Default>
					<POWER_NORM>100</POWER_NORM>
					<POWER_SLOW>75</POWER_SLOW>
					<POS_NORM>0</POS_NORM>
					<POS_OFF>1</POS_OFF>
					<POS_SLOW>2</POS_SLOW>
					<NUM_STATES>3</NUM_STATES>
				</Default>
			</Switch>
			<SWITCH_DIRECTION>Horizontal</SWITCH_DIRECTION>
			<IE_WIPERS_ID>Wipers</IE_WIPERS_ID>
		</Parameters>
		<Parameters Type="Override">
			<Switch Param="INTERACTION_TYPE">
				<Case Value="Knob">
					<ANIM>EXTERNAL</ANIM>
					<ARROW_TYPE>Curved</ARROW_TYPE>
					<TT_ICON>Rotate</TT_ICON>
				</Case>
			</Switch>
			<INPUT_EVENT_ID_SOURCE>HANDLING</INPUT_EVENT_ID_SOURCE>
			<USE_INPUT_EVENT_ID>HANDLING</USE_INPUT_EVENT_ID>
			<BTN_ID>#IE_WIPERS_ID#</BTN_ID>
		</Parameters>
		<Parameters Type="Override">
			<SET_POWER>#CIRCUIT_ID_WIPERS# (&gt;K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)</SET_POWER>
			<GET_POWER>(A:CIRCUIT POWER SETTING:#CIRCUIT_ID_WIPERS#, Percent)</GET_POWER>
			<Switch>
				<case Valid="PARK_OFF_NORM_FAST">
					<PARK_ON>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_PARK#, Bool) ! if{ #CIRCUIT_ID_PARK# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</PARK_ON>
					<PARK_OFF>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_PARK#, Bool) if{ #CIRCUIT_ID_PARK# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</PARK_OFF>
					<IS_PARK_ON>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_PARK#, Bool)</IS_PARK_ON>
					<INIT_WIPERS_STATE>
						(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_PARK#, Bool) if{ #CIRCUIT_ID_PARK# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
						(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_WIPERS#, Bool) if{ #CIRCUIT_ID_WIPERS# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
					</INIT_WIPERS_STATE>
					<Condition>
						<Test>
							<GreaterOrEqual>
								<Value>POS_PARK</Value>
								<Number>1</Number>
							</GreaterOrEqual>
						</Test>
						<True>
							<STATE_MAX_TIMER>#MOMENTARY_MIN_DURATION#</STATE_MAX_TIMER>
							<STATE0_TIMER>0</STATE0_TIMER>
							<REST_STATE Process="Int">#POS_PARK# 1 -</REST_STATE>
						</True>
						<False>
							<STATE_MAX_TIMER>0</STATE_MAX_TIMER>
							<STATE0_TIMER>#MOMENTARY_MIN_DURATION#</STATE0_TIMER>
							<REST_STATE Process="Int">1</REST_STATE>
						</False>
					</Condition>
				</case>
				<Default>
					<INIT_WIPERS_STATE>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_WIPERS#, Bool) if{ #CIRCUIT_ID_WIPERS# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</INIT_WIPERS_STATE>
				</Default>
			</Switch>
			<WIPERS_ON>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_WIPERS#, Bool) ! if{ #CIRCUIT_ID_WIPERS# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</WIPERS_ON>
			<WIPERS_OFF>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_WIPERS#, Bool) if{ #CIRCUIT_ID_WIPERS# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</WIPERS_OFF>
			<IS_WIPERS_ON>(A:CIRCUIT SWITCH ON:#CIRCUIT_ID_WIPERS#, Bool)</IS_WIPERS_ON>
		</Parameters>
		<Parameters Type="Override">
			<Condition NotEmpty="CIRCUIT_ID_WIPERS">
				<SIMVAR_TO_WATCH_0>CIRCUIT SWITCH ON:#CIRCUIT_ID_WIPERS#</SIMVAR_TO_WATCH_0>					
				<SIMVAR_TO_WATCH_1>CIRCUIT POWER SETTING:#CIRCUIT_ID_WIPERS#</SIMVAR_TO_WATCH_1>					
			</Condition>
			<Switch>
				<case Valid="OFF_INT_LOW_HIGH">
					<GET_STATE_EXTERNAL>#IS_WIPERS_ON# sp0 #GET_POWER# near sp1</GET_STATE_EXTERNAL>
					<ENUM_VAL_TO_POS_EXTERNAL>
						l0 if{
							l1 #POWER_INT# == if{ 
								#POS_INT# sp2 
							} els{ 
								l1 #POWER_LOW# == if{ #POS_LOW# sp2  } els{ #POS_HIGH# sp2  }
							} g2
						} els{ #POS_OFF# sp2 g2	} :2 l2
					</ENUM_VAL_TO_POS_EXTERNAL>
					<SET_STATE_#POS_OFF#>#WIPERS_OFF#</SET_STATE_#POS_OFF#>
					<SET_STATE_#POS_INT#>#WIPERS_ON# #POWER_INT# #SET_POWER#</SET_STATE_#POS_INT#>
					<SET_STATE_#POS_LOW#>#WIPERS_ON# #POWER_LOW# #SET_POWER#</SET_STATE_#POS_LOW#>
					<SET_STATE_#POS_HIGH#>#WIPERS_ON# #POWER_HIGH# #SET_POWER#</SET_STATE_#POS_HIGH#>
					<STR_STATE_#POS_OFF#>Off</STR_STATE_#POS_OFF#>
					<STR_STATE_#POS_INT#>Int</STR_STATE_#POS_INT#>
					<STR_STATE_#POS_LOW#>Low</STR_STATE_#POS_LOW#>
					<STR_STATE_#POS_HIGH#>High</STR_STATE_#POS_HIGH#>
					<TT_VALUE_#POS_OFF#>@TT_Package.GT_STATE_OFF</TT_VALUE_#POS_OFF#>
					<TT_VALUE_#POS_INT#>@TT_Package.GT_STATE_INT</TT_VALUE_#POS_INT#>
					<TT_VALUE_#POS_LOW#>@TT_Package.GT_STATE_LOW</TT_VALUE_#POS_LOW#>
					<TT_VALUE_#POS_HIGH#>@TT_Package.GT_STATE_HIGH</TT_VALUE_#POS_HIGH#>
					<CODE_POS_#POS_OFF#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Off)</CODE_POS_#POS_OFF#>
					<CODE_POS_#POS_INT#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Int)</CODE_POS_#POS_INT#>
					<CODE_POS_#POS_LOW#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Low)</CODE_POS_#POS_LOW#>
					<CODE_POS_#POS_HIGH#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_High)</CODE_POS_#POS_HIGH#>
					<STATE#POS_OFF#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_OFF# ==</STATE#POS_OFF#_TEST>
					<STATE#POS_INT#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_INT# ==</STATE#POS_INT#_TEST>
					<STATE#POS_LOW#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_LOW# ==</STATE#POS_LOW#_TEST>
					<STATE#POS_HIGH#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_HIGH# ==</STATE#POS_HIGH#_TEST>
				</case>
				<case Valid="PARK_OFF_NORM_FAST">
					<SIMVAR_TO_WATCH_2>CIRCUIT SWITCH ON:#CIRCUIT_ID_PARK#</SIMVAR_TO_WATCH_2>
					<GET_STATE_EXTERNAL>#IS_WIPERS_ON# sp0 #IS_PARK_ON# sp1 #GET_POWER# near sp2</GET_STATE_EXTERNAL>
					<ENUM_VAL_TO_POS_EXTERNAL>
						l0 if{
							l2 #POWER_FAST# == if{ #POS_FAST# sp3 } els{ #POS_NORM# sp3 } g2
						} els{
							l1 if{ #POS_PARK# sp3 } els{ #POS_OFF# sp3 } g2
						} :2 l3
					</ENUM_VAL_TO_POS_EXTERNAL>
					<CODE_POS_RETURN Process="Param">CODE_POS_#REST_STATE#</CODE_POS_RETURN>
					<SET_STATE_#POS_FAST#>#PARK_OFF# #WIPERS_ON# #POWER_FAST# #SET_POWER#</SET_STATE_#POS_FAST#>
					<SET_STATE_#POS_NORM#>#PARK_OFF# #WIPERS_ON# #POWER_NORM# #SET_POWER#</SET_STATE_#POS_NORM#>
					<SET_STATE_#POS_OFF#>#PARK_OFF# #WIPERS_OFF#</SET_STATE_#POS_OFF#>
					<SET_STATE_#POS_PARK#>#PARK_ON# #WIPERS_OFF#</SET_STATE_#POS_PARK#>
					<STR_STATE_#POS_FAST#>Fast</STR_STATE_#POS_FAST#>
					<STR_STATE_#POS_NORM#>Norm</STR_STATE_#POS_NORM#>
					<STR_STATE_#POS_OFF#>Off</STR_STATE_#POS_OFF#>
					<STR_STATE_#POS_PARK#>Park</STR_STATE_#POS_PARK#>
					<TT_VALUE_#POS_FAST#>@TT_Package.GT_STATE_FAST</TT_VALUE_#POS_FAST#>
					<TT_VALUE_#POS_NORM#>@TT_Package.GT_STATE_NORMAL</TT_VALUE_#POS_NORM#>
					<TT_VALUE_#POS_OFF#>@TT_Package.GT_STATE_OFF</TT_VALUE_#POS_OFF#>
					<TT_VALUE_#POS_PARK#>@TT_Package.GT_STATE_PARK</TT_VALUE_#POS_PARK#>
					<CODE_POS_#POS_FAST#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Fast)</CODE_POS_#POS_FAST#>
					<CODE_POS_#POS_NORM#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Norm)</CODE_POS_#POS_NORM#>
					<CODE_POS_#POS_OFF#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Off)</CODE_POS_#POS_OFF#>
					<CODE_POS_#POS_PARK#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Park)</CODE_POS_#POS_PARK#>
					<STATE#POS_FAST#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_FAST# ==</STATE#POS_FAST#_TEST>
					<STATE#POS_NORM#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_NORM# ==</STATE#POS_NORM#_TEST>
					<STATE#POS_OFF#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_OFF# ==</STATE#POS_OFF#_TEST>
					<STATE#POS_PARK#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_PARK# ==</STATE#POS_PARK#_TEST>
					<MOMENTARY_SWITCH/>
				</case>
				<Default>
					<GET_STATE_EXTERNAL>#IS_WIPERS_ON# sp0 #GET_POWER# near sp1</GET_STATE_EXTERNAL>
					<ENUM_VAL_TO_POS_EXTERNAL>l0 if{ l1 #POWER_SLOW# == if{ #POS_SLOW# sp2 } els{ #POS_NORM# sp2 } g2 } els{ #POS_OFF# sp2 } :2 l2</ENUM_VAL_TO_POS_EXTERNAL>
					<SET_STATE_#POS_NORM#>#WIPERS_ON# #POWER_NORM# #SET_POWER#</SET_STATE_#POS_NORM#>
					<SET_STATE_#POS_OFF#>#WIPERS_OFF#</SET_STATE_#POS_OFF#>
					<SET_STATE_#POS_SLOW#>#WIPERS_ON# #POWER_SLOW# #SET_POWER#</SET_STATE_#POS_SLOW#>
					<STR_STATE_#POS_NORM#>Norm</STR_STATE_#POS_NORM#>
					<STR_STATE_#POS_OFF#>Off</STR_STATE_#POS_OFF#>
					<STR_STATE_#POS_SLOW#>Slow</STR_STATE_#POS_SLOW#>
					<TT_VALUE_#POS_NORM#>@TT_Package.GT_STATE_NORMAL</TT_VALUE_#POS_NORM#>
					<TT_VALUE_#POS_OFF#>@TT_Package.GT_STATE_OFF</TT_VALUE_#POS_OFF#>
					<TT_VALUE_#POS_SLOW#>@TT_Package.GT_STATE_SLOW</TT_VALUE_#POS_SLOW#>
					<CODE_POS_#POS_NORM#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Norm)</CODE_POS_#POS_NORM#>
					<CODE_POS_#POS_OFF#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Off)</CODE_POS_#POS_OFF#>
					<CODE_POS_#POS_SLOW#>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#_Slow)</CODE_POS_#POS_SLOW#>
					<STATE#POS_NORM#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_NORM# ==</STATE#POS_NORM#_TEST>
					<STATE#POS_OFF#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_OFF# ==</STATE#POS_OFF#_TEST>
					<STATE#POS_SLOW#_TEST>(B:#INPUT_EVENT_ID_SOURCE#_#BTN_ID#) #POS_SLOW# ==</STATE#POS_SLOW#_TEST>
				</Default>
			</Switch>
			<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#BTN_ID#</TOOLTIP_ENTRY_0>
		</Parameters>
		<Parameters Type="Default">
			<TOOLTIP_TITLE>@TT_Package.SAFETY_KNOB_WIPERS_TITLE</TOOLTIP_TITLE>
			<TT_DESCRIPTION_ID>@TT_Package.SAFETY_KNOB_WIPERS_LEFT_ACTION</TT_DESCRIPTION_ID>
		</Parameters>
		<Component ID="#NODE_ID#" Node="#NODE_ID#">
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>#INIT_WIPERS_STATE#</UPDATE_CODE>
			</UseTemplate>
			<UseInputEvent ID="#USE_INPUT_EVENT_ID#"/>
			<UseTemplate Name="#TEMPLATE_TO_USE#"/>
		</Component>
	</Template>
</Behaviors>